// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package Diff_

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Anonymous2 struct {
	_tab flatbuffers.Table
}

func GetRootAsAnonymous2(buf []byte, offset flatbuffers.UOffsetT) *Anonymous2 {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Anonymous2{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Anonymous2) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Anonymous2) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Anonymous2) Match(obj *Match) *Match {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Match)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *Anonymous2) Add(obj *Add) *Add {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Add)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *Anonymous2) Del(obj *Del) *Del {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Del)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *Anonymous2) Move(obj *Move) *Move {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Move)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *Anonymous2) Update(obj *Update) *Update {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Update)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func Anonymous2Start(builder *flatbuffers.Builder) {
	builder.StartObject(5)
}
func Anonymous2AddMatch(builder *flatbuffers.Builder, match flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(match), 0)
}
func Anonymous2AddAdd(builder *flatbuffers.Builder, add flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(add), 0)
}
func Anonymous2AddDel(builder *flatbuffers.Builder, del flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(del), 0)
}
func Anonymous2AddMove(builder *flatbuffers.Builder, move flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(move), 0)
}
func Anonymous2AddUpdate(builder *flatbuffers.Builder, update flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(update), 0)
}
func Anonymous2End(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
